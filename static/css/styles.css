/*FONTS*/
@import url('https://fonts.googleapis.com/css2?family=Noto+Serif+JP:wght@300;400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Libre+Baskerville:wght@700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@400;500&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@400;500;600;700&display=swap');


body, html {
    background: #edf8fc;
    margin: 0;
    height: 100%;
    min-height: 100%;
    font-size: 20px;
}

body {
    display: flex;
    flex-direction: column;
}

header,
footer {
  flex: none;
}

header {
    background-image: url("../images/sims_background.png");
    text-align: center;
}

/* Style the navigation bar */
.navbar {
    width: 100%;
    display: flex;
    justify-content: space-between;
    padding: 2px;
  }
  
  /* Navbar links */
  .navbar a {
    float: left;
    text-align: center;
    padding: 5px;
    color: black;
    text-decoration: none;
    font-size: 17px;
  }
  

  
  /* Current/active navbar link */
  .active {
    background-color: #04AA6D;
  }
  
  /* Add responsiveness - will automatically display the navbar vertically instead of horizontally on screens less than 500 pixels */
  @media screen and (max-width: 500px) {
    .navbar a {
      float: none;
      display: block;
    }
  }

footer{
    display: flex;
    min-height:5px; 
    width: 100%;
    margin-top:auto; 
    align-items: center;
    justify-content: center;
    flex-flow: row wrap;
}

main {
    display: flex;
    align-items: center;
    justify-content: center;
    flex: auto;
    flex-direction: column;

}

#eventContainer{
    width: 100%;
  }
  
#genBtnContainer {
    width: auto;
    min-height: 50px;

    margin-top: auto;
    margin-bottom: auto;
}



/* HEADER CONTENT */

h1, h4 {
    font-family: 'Libre Baskerville', serif;
}

h1.header{
    color:#21b96b;
}

p {
    text-align: center;
    font-family: 'Roboto Slab', serif;
    font-weight: 400;
}

/* headlines with lines https://stackoverflow.com/questions/15557627/heading-with-horizontal-line-on-either-side */
.decorated {
    overflow: hidden;
    text-align: center;
}

.decorated > span {
    position: relative;
    display: inline-block;
}

.decorated > span:before, .decorated > span:after {
    content: '';
    position: absolute;
    top: 50%;
    border-bottom: 2px solid;
    width: 592px; /* half of limiter */
    margin: 0 10px;
}

.decorated > span:before {
    right: 100%;
}

.decorated > span:after {
    left: 100%;
}

.fancyText {
    color: black;
    display: block;
    font-family: 'Noto Serif JP', serif;
    font-size: 0.85em;
    font-weight: 400;
    position: relative;
    text-align: center;
}

#simsText {
    letter-spacing: 0.15em;
}

/* MAIN CONTENT */
#eventText {
    font-size: 1.2em;
    text-align: center;
font-family: 'Poppins', sans-serif;
    font-weight: 600;
    color: #21b96b;
}

.description {
    /*font-size: 1em;*/
    text-align: center;
}

.label {
font-family: 'Poppins', sans-serif;
    font-size: 1em;
    margin: 5px;
    /*padding: 5px;*/
    font-weight: 500;
        text-align: center;
    color: #21b96b ;


}

/* General button style */
.btn {
    font-family: 'Oswald', sans-serif;
    border-radius: 12px;
    border: none;
    font-size: inherit;
    color: white;
    background:  #3498db;
    cursor: pointer;
    padding: 10px 25px;
    display: inline-block;
    margin: 15px 30px;
    letter-spacing: 1px;
    font-weight: 500;
    position: relative;
    transition: all 0.3s;
    outline: none;
}
#randomBtn {
    margin: 10px !important;
    padding: 0px !important;
        background-color: #eaf1f8;

    font-size: 36px;
}


#randomNum {
    width: 10%;
    margin: 0 auto;
    background-color: white;
    outline: #111111 solid 1px;
    align-items:center;
    font-family: 'Noto Serif Jp', serif;
    font-size: 20px;
    font-weight: bold;

}
.btn:hover{
    background: #2980b9;
    cursor: pointer;

}

.btn:active {
    background: #2980b9;
    top: 2px;
}


.fa-play-circle {
    vertical-align: -5px;
}

.flex-row {
    align-items: center;
    justify-content: center;
    text-align: center
}
.break {
    flex-basis: 100%;
    height: 0;
    margin: 5px;
}


/* failure message */

.failure {
    color: #981208;
    background-color: #f5928b;
    border-color: #f55a4e;
    display: none;
}

.success {
    color: #3c763d;
    background-color: #dff0d8;
    border-color: #d6e9c6;
    display: none;
}


/* FOOTER CONTENT */
.fab{
    font-size: 30px;
  text-align: center;
  text-decoration: none;
    border-radius: 50%;
    margin:10px;
    opacity: 0.85;


}

.fab:hover {
  opacity: 1.0;
  cursor: pointer;

}

.fa-linkedin-in{
        padding: 20%;
    background-color: #0e76a8;
    color: white;
}

.fa-github{
    background-color: white;
    color: #333;
}


.rotate {
    -moz-transition: all .5s linear;
    -webkit-transition: all .5s linear;
    transition: all .5s linear;
}
.rotate.down {
    -moz-transform:rotate(360deg);
    -webkit-transform:rotate(360deg);
    transform:rotate(360deg);
}
img {
    max-width: 100%;
    max-height: 100vh;
    height: auto;
}

#imgBody {
    margin: 0
}

a {
    color: #610b04;
    text-decoration: underline;
}

a:hover {
    color: #250401;
    text-decoration: underline;
    cursor: pointer;   
}

a:active {
    color: 250401;
  }

/* Courtsey of  Jake Jarvis: https://jarv.is/notes/css-waving-hand-emoji/*/
.wave {
    animation-name: wave-animation;  /* Refers to the name of your @keyframes element below */
    animation-duration: 2.5s;        /* Change to speed up or slow down */
    animation-iteration-count: infinite;  /* Never stop waving :) */
    transform-origin: 70% 70%;       /* Pivot around the bottom-left palm */
    display: inline-block;
  }
  
  @keyframes wave-animation {
      0% { transform: rotate( 0.0deg) }
     10% { transform: rotate(14.0deg) }  /* The following five values can be played with to make the waving more or less extreme */
     20% { transform: rotate(-8.0deg) }
     30% { transform: rotate(14.0deg) }
     40% { transform: rotate(-4.0deg) }
     50% { transform: rotate(10.0deg) }
     60% { transform: rotate( 0.0deg) }  /* Reset for the last half to pause */
    100% { transform: rotate( 0.0deg) }
  }
  